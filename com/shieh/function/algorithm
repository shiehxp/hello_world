package com.shieh.function;

import java.util.Scanner;

	class math{
		//有一对兔子，从出生起后第三个月开始生兔子，1,1,2,3,5,8,13,21
		public static int fib(int n){
			if(n==1||n==2){
				return 1;
			}else
				return fib(n-1)+fib(n-2);
		}
		//素数：用一个数分别除以2到sqrt（这个数）,能被整除不是素数，反之是素数
		public static boolean isPrime(int n){
			for(int i=2;i<n/2;i++){
				if(n%2==0)
					return false;				
			}
			return true;
		}
		//水仙花数：一个三位数，其各位数字立方和等于该数本身
		public static boolean shuixianhua(int n){
			int i=0,j=0,k=0;
			i=n/100;
			j=(n%100)/10;
			k=n%10;
			if(n==i*i*i+j*j*j+k*k*k)
				return true;
			else
				return false;
		}
		//辗转相除法求最大公约数和最小公倍数
		public static int gcd(int m,int n){
			int max=m>n?m:n;
			int min=m>n?n:m;
			while(max!=0){
				int t=min%max;
				min=max;
				max=t;
			}
			return min;
		}
		//输出一个字符串中汉子和字母的个数
		public static void count(String str){
			String E1="[\u4e00-\u9fa5]";
			String E2="[a-zA-Z]";
			int countH=0;
			int countE=0;
			char[] c=str.toCharArray();
			String[] arrStr=new String[c.length];
			for(int i=0;i<c.length;i++){
				arrStr[i]=String.valueOf(c[i]);
			}
			for(String i:arrStr){
				if(i.matches(E1)){
					countH++;
				}
				if(i.matches(E2)){
					countE++;
				}
			}
			System.out.println("汉字个数为"+countH);
			System.out.println("字母个数为"+countE);
		}
		//分数在90为A，90-60为B，小于60为C
		public static void grade(int n){
			String s=(n>90?"A":(n>60?"B":"C"));
			System.out.println(s);
		}
		//完数：一个数恰好等于他的因子之和
		public static void wanshu(){
			int sum;
			for(int i=1;i<1000;i++){
				sum=0;
				for(int j=1;j<i;j++)
					if(i%j==0)
						sum+=j;
					if(sum==i)
						System.out.println(i+" ");
			}
		}
		//小球从100米高自由下落
		public static void ball(){
			double s=0,t=100;
			for(int i=1;i<=10;i++){
				s+=t;
				t=t/2;
			}
			System.out.println("十次后共经过"+s);
			System.out.println("第十次反弹"+t);
		}
		//1、 2、 3 、4能组成多少个互不相同且无重复数字的三位数
		public static void sanweishu(){
			int i=0,j=0,k=0,t=0;
			for(i=1;i<=4;i++)
				for(j=1;j<=4;j++)
					for(k=1;k<=4;k++)
						if(i!=j&&j!=k&&i!=k){
							t+=1;
							System.out.println(i*100+j*10+k);
						}
			System.out.println("共有"+t+"个不重复的三位数");
		}
		//输入某年某月某日，判断这一天是这一年的第几天
		public static void day(){
			int day=0,month=0,year=0,sum=0,leap;
			System.out.println("请输入年、月、日");
			Scanner s=new Scanner(System.in);
			year =s.nextInt();
			month=s.nextInt();
			day=s.nextInt();
			switch(month){//计算某月一起月份的天数
			case 1:
				sum=0;break;
			case 2:
				sum=31;break;
			case 3:
				sum=59;break;
			case 4:
				sum=90;break;
			case 5:
				sum=120;break;
			case 6:
				sum=151;break;
			case 7:
				sum=181;break;
			case 8:
				sum=212;break;
			case 9:
				sum=243;break;
			case 10:
				sum=273;break;
			case 11:
				sum=304;break;
			case 12:
				sum=334;break;
				default:
					System.out.println("数据错误");break;
			}
			sum=sum+day;//再加上某天的天数
			if(year%400==0||(year%4==0&&year%100!=0)){
				leap=1;
			}else{
				leap=0;
			}
			if(leap==1&&month>2)
				sum++;
			System.out.println("这是"+year+"的第"+sum+"天");
		}
		//输入三个整数，由小到大输出
		public static void sort1(){
			int i=0,j=0,k=0;
			System.out.println("请输入三个整数");
			Scanner s=new Scanner(System.in);
			i=s.nextInt();
			j=s.nextInt();
			k=s.nextInt();
			if(i>j){
				int t=i;
				i=j;
				j=t;
			}
			if(i>k){
				int t=i;
				i=k;
				k=t;
			}
			if(j>k){
				int t=j;
				j=k;
				k=t;
			}
			System.out.println(i+""+j+""+k);
		}
		//输出9*9口诀
		public static void koujue(){
			for(int i=1;i<10;i++){
				//for(int j=i;j<=9;j++)上三角
				for(int j=1;j<=i;j++)
					System.out.print(i+"*"+j+"="+i*j+"\t");
					System.out.println();
			}						
		}
		//猴子吃桃：第一天吃一半，多吃了一个，第二天将剩下的又吃掉一半，又多吃一个，，第十天只剩下一个
		public static int houzi(int day){
			int i,sum=1;
			for(i=1;i<10;i++)
				sum=(sum+1)*2;
			return sum;
			/*if(day==10){
				return 1;
			}else{
				return (houzi(day+1)+1)*2;
			}*/						
		}
		//甲队为a、b、c三人，乙队为x、y、z，a不和x比，c不和x，z比
		public static void bisai(){
			for(char i='X';i<='Z';i++)
				for(char j='X';j<='Z';j++)
					for(char k='X';k<='Z';k++){
						if(i!='X'&&k!='X'&&k!='Z'&&i!=j&&i!=k&&j!=k){
							System.out.println("a的对手是"+i+"，b的对手是"+j+"，c的对手是"+k);
						}
					}
		}
		//打印半个菱形
		public static void banlingxing(){
			int i=0,j=0;
			for(i=1;i<=4;i++){
				for(j=1;j<=2*i-1;j++)
					System.out.print("*");
			System.out.println("");
			}
			for(i=4;i>=1;i--){
				for(j=1;j<=2*i-3;j++)
					System.out.print("*");
				System.out.println("");
			}				
		}
		//打印菱形
		public static void lingxing(){
			for(int i=1;i<=4;i++){
				for(int j=1;j<=4;j++)
					System.out.print("");
				for(int k=1;k<=2*i-1;k++)
					System.out.print("*");
				System.out.println("");
			}
			for(int i=4;i>=1;i--){
				for(int j=1;j<=5-i;j++)
					System.out.print("");
				for(int k=1;k<=2*i-3;k++)
					System.out.print("*");
				System.out.println("");
			}
		}
		//求2/1,3/2,5/3这个数列前20项的和
		public static void qiuhe(){
			double i=1,j=1,sum=0;
			for(int k=0;k<20;k++){
				double t=i;
				i=i+j;
				j=t;
				sum+=i/j;
			}
			System.out.println(sum);
		}
		//求1！+2！+3！+...+20！的和
		public static void qiuhe1(){
			long sum=0,i=1,fac=1;
			for(i=1;i<=20;i++){
				fac*=i;
				sum+=fac;
			}
			System.out.println(sum);
		}
		//第五个人比第四个人大2岁，第四个比第三个大2岁....第一个人10岁，第五个人多大
		public static int getAge(int n){
			if(n==1){
				return 10;
			}else
				return getAge(n-1)+2;		
		}
		//给出一个不多于5位的正整数，求：是个几位数，逆序打印出各个位数
		public static void converse(int n){
			String str=Integer.toString(n);
			System.out.println(str.length());
			for(int i=str.length()-1;i>=0;i--){
				System.out.print(str.charAt(i)+" ");
			}
		}
		//一个五位数，判断是不是回文数，即个位与万位相同，十位与千位相同
		public static boolean huiwenshu(int n){
			int g=n%10;
			int s=n/1000%10;
			int b=n/100%10;
			int q=n/10%10;
			int w=n/10000;
			if(g==w&&s==q){
				return true;
			}
			return false;
		}
		//求一个3*3矩阵对角线之和
		public static void djx(){
			int sum=0;
			int[][] arr={{12,23,34},{23,34,45},{34,45,56}};
			for(int i=0;i<arr.length;i++)
				for(int j=0;j<arr[i].length;j++){
					if(i==j)
						sum+=arr[i][j];
				}
				System.out.println(sum);	
		}
		
		
	}
	public class Algorithm {
		public static void main(String args[]){
			math.djx();
		}
	}
